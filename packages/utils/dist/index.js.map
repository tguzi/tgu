{"version":3,"file":"index.js","sources":["../lib/index.ts"],"sourcesContent":["export function throttle(fn: Function, wait = 200) {\n  if (typeof fn !== 'function') {\n    return () => { }\n  }\n  let timer: any\n  return function (...args: any[]) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn?.apply(null, args)\n        clearTimeout(timer)\n        timer = 0\n      }, wait)\n    }\n  }\n}\n\nexport function debounch(fn: Function, wait: number) {\n  if (typeof fn !== 'function') {\n    return () => { }\n  }\n  let timer: any\n  function zhix(...args: any[]) {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn?.apply(null, args)\n    }, wait)\n  }\n  return zhix\n}\n\nexport function encodePwd(str: string) {\n  if (typeof str !== 'string') {\n    return str\n  }\n  let out = ''\n  for (const c of str) {\n    out += c.charCodeAt(0) - 20\n  }\n  return out\n}\n\nexport function encodeId(id: number, CONFUSION = 'TG') {\n  try {\n    const str = `${CONFUSION}-${id}`\n    return window.btoa(window.encodeURIComponent(str))\n  } catch (e) {\n    return ''\n  }\n}\n\nexport function decodeId(str: string) {\n  try {\n    const originStr = window.atob(window.decodeURIComponent(str))\n    return originStr.split('-')[1]\n  } catch (e) {\n    return ''\n  }\n}\n\nexport function isFunction<T>(obj: any): obj is T {\n  return typeof obj === 'function'\n}\n\nexport function isNull(val: any): boolean {\n  return !val && val !== 0 && (typeof val !== 'boolean' ? true : false)\n}\n\nexport function getVariableType(value: any, isUpperCase: boolean = false): string {\n  const str = Object.prototype.toString.call(value)\n  const patternArr = str.match(/[^\\s]\\w+(?=\\])/)\n  const type = patternArr && patternArr[0] ? patternArr[0] : ''\n  return isUpperCase ? type.toUpperCase() : type.toLowerCase()\n}"],"names":["fn","wait","_i","args","clearTimeout","timer","setTimeout","apply","str","window","atob","decodeURIComponent","split","e","id","CONFUSION","btoa","encodeURIComponent","out","str_1","charCodeAt","value","isUpperCase","patternArr","Object","prototype","toString","call","match","type","toUpperCase","toLowerCase","obj","val"],"mappings":"8FAgByBA,EAAcC,GACrC,MAAkB,mBAAPD,EACF,aAGT,eAAc,aAAAE,mBAAAA,IAAAC,kBACZC,aAAaC,GACbA,EAAQC,YAAW,WACjBN,MAAAA,GAAAA,EAAIO,MAAM,KAAMJ,KACfF,IALL,IAAII,6BA8BmBG,GACvB,IAEE,OADkBC,OAAOC,KAAKD,OAAOE,mBAAmBH,IACvCI,MAAM,KAAK,GAC5B,MAAOC,GACP,MAAO,+BAdcC,EAAYC,gBAAAA,QACnC,IACE,IAAMP,EAASO,MAAaD,EAC5B,OAAOL,OAAOO,KAAKP,OAAOQ,mBAAmBT,IAC7C,MAAOK,GACP,MAAO,gCAhBeL,GACxB,GAAmB,iBAARA,EACT,OAAOA,EAGT,IADA,IAAIU,EAAM,OACMC,IAAAjB,WAAAA,IAAK,CACnBgB,QAASE,WAAW,GAAK,GAE3B,OAAOF,oCA6BuBG,EAAYC,gBAAAA,MAC1C,IACMC,EADMC,OAAOC,UAAUC,SAASC,KAAKN,GACpBO,MAAM,kBACvBC,EAAON,GAAcA,EAAW,GAAKA,EAAW,GAAK,GAC3D,OAAOD,EAAcO,EAAKC,cAAgBD,EAAKE,2CAZnBC,GAC5B,MAAsB,mBAARA,2BAGOC,GACrB,OAAQA,GAAe,IAARA,GAA6B,kBAARA,6BAhEbjC,EAAcC,GACrC,oBADqCA,OACnB,mBAAPD,EACF,aAGF,eAAU,aAAAE,mBAAAA,IAAAC,kBACVE,IACHA,EAAQC,YAAW,WACjBN,MAAAA,GAAAA,EAAIO,MAAM,KAAMJ,GAChBC,aAAaC,GACbA,EAAQ,IACPJ,KAPP,IAAII"}